<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://cosmoslazycat.github.io</id>
    <title>CosmosLazyCat的实验室</title>
    <updated>2021-07-10T06:48:48.833Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://cosmoslazycat.github.io"/>
    <link rel="self" href="https://cosmoslazycat.github.io/atom.xml"/>
    <subtitle>Man Always Remember Love Because Of Romance Only</subtitle>
    <logo>https://cosmoslazycat.github.io/images/avatar.png</logo>
    <icon>https://cosmoslazycat.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, CosmosLazyCat的实验室</rights>
    <entry>
        <title type="html"><![CDATA[[分享]计算机学科有意思的比喻]]></title>
        <id>https://cosmoslazycat.github.io/post/fen-xiang-ji-suan-ji-xue-ke-you-yi-si-de-bi-yu/</id>
        <link href="https://cosmoslazycat.github.io/post/fen-xiang-ji-suan-ji-xue-ke-you-yi-si-de-bi-yu/">
        </link>
        <updated>2021-06-25T05:46:49.000Z</updated>
        <content type="html"><![CDATA[<p>原文：<a href="https://twitter.com/laixintao/status/1402663872561958915?s=20">https://twitter.com/laixintao/status/1402663872561958915?s=20</a></p>
<p>小时候喜欢哈利波特，后来觉得学习计算机就像在学习魔法一样。</p>
<ul>
<li>魔咒学 - 计算机组成原理和体系结构</li>
<li>树枝占卜学 - 机器学习</li>
<li>黑魔法防御术 - 信息安全技术</li>
<li>魔法理论 - 可计算理论</li>
<li>魔法史 - Unix发展史</li>
<li>草药学 - 数学</li>
<li>魔药学 - 算法和数据结构</li>
<li>变形学 - 数据库</li>
<li>飞行课 - 操作系统</li>
<li>咒语解析学 - 编译原理</li>
<li>猫头鹰：互联网</li>
<li>魔法杖：编程语言</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[NEWS]安全日报]]></title>
        <id>https://cosmoslazycat.github.io/post/news0706-an-quan-ri-bao/</id>
        <link href="https://cosmoslazycat.github.io/post/news0706-an-quan-ri-bao/">
        </link>
        <updated>2021-06-24T15:09:25.000Z</updated>
        <content type="html"><![CDATA[<h1 id="信安守则">信安守则：</h1>
<p>1，学安全的第一步是先学《网络安全法》。<br>
2，未经授权的渗透测试，以及在渗透测试中超越边界的任何行为都视为违法<br>
3，只做有双方背书的书面授权的安全测试</p>
<p>此系列博文不分享任何漏洞编号、POC代码、使用教程，旨在提醒自己注意代码安全问题。</p>
<p>一、Saltstack 任意文件写入漏洞<br>
1，说明：saltstack (<a href="http://www.saltstack.com">http://www.saltstack.com</a>) 是使用python开发的一款服务器基础架构集中化管理平台,开始于2011年,具备配置和管理、远程执行、监控等功能。</p>
<p>2，漏洞信息：saltstack在后台的一些配置文件修改编辑等处，程序开发过程中将这些配置信息未做好过滤就保存到了文件中，导致攻击者可以在文件中写入任意的内容.</p>
<p>3，防范手段:</p>
<ul>
<li>尽量避免在可执行文件中保存字符串内容。</li>
<li>对写入的字符串进行完美的过滤。</li>
</ul>
<p>影响版本：</p>
<ul>
<li>&lt;3002.5</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[NEWS]安全日报]]></title>
        <id>https://cosmoslazycat.github.io/post/newsan-quan-ri-bao/</id>
        <link href="https://cosmoslazycat.github.io/post/newsan-quan-ri-bao/">
        </link>
        <updated>2021-06-24T13:23:00.000Z</updated>
        <content type="html"><![CDATA[<h1 id="信安守则">信安守则：</h1>
<p>1，学安全的第一步是先学《网络安全法》。<br>
2，未经授权的渗透测试，以及在渗透测试中超越边界的任何行为都视为违法<br>
3，只做有双方背书的书面授权的安全测试</p>
<p>此系列博文不分享任何漏洞编号、POC代码、使用教程，旨在提醒自己注意代码安全问题。</p>
<h3 id="一-lanproxy-目录遍历漏洞directory-traversal">一、Lanproxy 目录遍历漏洞（Directory traversal）</h3>
<p>1，说明：lanproxy是一个将局域网个人电脑、服务器代理到公网的内网穿透工具，支持tcp流量转发，可支持任何tcp上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面...）。</p>
<p>2，漏洞信息：攻击者能通过构造某些信息并发送GET请求，在得到响应后，能在配置文件中读取到账号密码</p>
<p>3，防范手段（前端/后端）：</p>
<ul>
<li>
<p>过滤../和~/目录跳转符、%00字符截断符、dir命令等；</p>
</li>
<li>
<p>合理配置Web服务器的目录权限；（最有效的方式）</p>
</li>
<li>
<p>隐藏内部相关配置细节，以免程序出错时显示出来；</p>
</li>
<li>
<p>对用户提交过来的文件名进行硬编码或者统一编码；</p>
</li>
<li>
<p>对文件后缀进行白名单控制，对包含了恶意的符号或者空字节进行拒绝。</p>
</li>
</ul>
<p>影响版本</p>
<ul>
<li>Lanproxy 0.1</li>
</ul>
<h3 id="二-gitlab-graphql邮箱信息泄露漏洞">二、GitLab Graphql邮箱信息泄露漏洞</h3>
<p>1，说明:GraphQL 是一种针对 Graph（图状数据）进行查询特别有优势的 Query Language（查询语言）。GitLab 为此专门提供了GraphQL的API.</p>
<p>2，漏洞信息：Gitlab本身不允许获取账号邮箱信息，这里通过调用 Graphql 的某一信息查询造成了邮箱泄露漏洞，但利用该漏洞需要有账号用户名，如果没有，则无法获取邮箱信息。不过通过构造某一语句作为请求发送，可一次性返回所有的用户名和邮箱。</p>
<p>影响版本：</p>
<ul>
<li>GitLab 13.4 - 13.6.2</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[NEWS]安全日报]]></title>
        <id>https://cosmoslazycat.github.io/post/new73-an-quan-ri-bao/</id>
        <link href="https://cosmoslazycat.github.io/post/new73-an-quan-ri-bao/">
        </link>
        <updated>2021-06-24T10:20:32.000Z</updated>
        <content type="html"><![CDATA[<h1 id="信安守则">信安守则：</h1>
<p>1，学安全的第一步是先学《网络安全法》。<br>
2，未经授权的渗透测试，以及在渗透测试中超越边界的任何行为都视为违法<br>
3，只做有双方背书的书面授权的安全测试</p>
<p>此系列博文不分享任何漏洞编号、POC代码、使用教程，旨在提醒自己注意代码安全问题。</p>
<h3 id="一-veryfitpro加密漏洞">一、VeryFitPro加密漏洞</h3>
<p>1，说明：VeryFitPro是中国深圳市爱都科技有限公司的一款功能强大的健康管理软件,需要搭配同品牌智能手环使用,使用app用戶可以实时查看行走步数、消耗卡路里、睡眠质量等信息。</p>
<p>2，漏洞信息：VeryFitPro 中存在加密漏洞问题，该漏洞源于允许通过明文HTTP与后端API进行所有通信。攻击者可通过该漏洞获得用戶敏感信息。以下产品及版本受到影响：<code>VeryFitPro For Android 3.2.8</code>。</p>
<h3 id="二-overlayfs-权限提升漏洞">二、Overlayfs 权限提升漏洞</h3>
<p>1，说明：Overlayfs是Linux系统中的一种堆叠文件系统，它依赖并建立在其它的文件系统之上（例如ext4fs和xfs等等），并不直接参与磁盘空间结构的划分，仅仅将原来底层文件系统中不同的目录进行“合并”，然后向用户呈现。</p>
<p>2，漏洞信息：OverlayFS漏洞允许Ubuntu下的本地用戶获得root权限。 Linux內核中overlayfs文件系统中的Ubuntu特定问题，在该问题中，它未正确验证关于用户名称空间的文件系统功能的应用程序。由于Ubuntu附带了一個允许非特权的overlayfs挂载的补丁，因此本地攻击者可以使用它來获得更高的权限。</p>
<h4 id="受影响版本">受影响版本：</h4>
<ul>
<li>Ubuntu 20.10</li>
<li>Ubuntu 20.04 LTS</li>
<li>Ubuntu 18.04 LTS</li>
<li>Ubuntu 16.04 LTS</li>
<li>Ubuntu 14.04 ESM</li>
</ul>
<h3 id="三-openssl拒绝服务漏洞">三、OpenSSL拒绝服务漏洞</h3>
<p>1，说明：OpenSSL是为网络通信提供安全及数据完整性的一种安全协议，囊括了主要的密码算法、常用的密钥和证书封装管理功能以及SSL协议，并提供了丰富的应用程序供测试或其它目的使用。同时也是一个开放源代码的软件库包，而应用程序可以使用这个包来进行安全通信，避免窃听，同时确认另一端连接者的身份。</p>
<p>2，漏洞信息：openssl 版本低于 1.1.1-k，默认配置下使用 openssl 的软件（包括 nginx 和 trojan-gfw 等），恶意构造的请求可以让服务端崩溃。</p>
<h4 id="受影响版本-2">受影响版本：</h4>
<ul>
<li>&lt; 1.1.1-k</li>
</ul>
<h3 id="每日鸡汤">每日鸡汤</h3>
<pre><code>成事和成功，永远不是外界的环境和他人推动你走，只能靠你发挥主动。
什么城市、公司、学校、老师、同学、上司都是次要的。坚持自学、额外努力，主动思考、注重方法才重要。
一直保持自学和阅读习惯，保持有问题多搜索多查资料自己搞懂的习惯，一直保持主动思考的习惯。对任何专业、工作，都要如此。
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[blog]Gridea主题修改]]></title>
        <id>https://cosmoslazycat.github.io/post/bloggridea-zhu-ti-xiu-gai/</id>
        <link href="https://cosmoslazycat.github.io/post/bloggridea-zhu-ti-xiu-gai/">
        </link>
        <updated>2021-06-24T06:39:21.000Z</updated>
        <content type="html"><![CDATA[<p>作者原主题购买： <a href="https://mianbaoduo.com/o/bread/YpWYlJ0=">https://mianbaoduo.com/o/bread/YpWYlJ0=</a></p>
<h2 id="一-改动前">一、改动前</h2>
<figure data-type="image" tabindex="1"><img src="https://cosmoslazycat.github.io/post-images/1625812792694.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://cosmoslazycat.github.io/post-images/1625812811980.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="3"><img src="https://cosmoslazycat.github.io/post-images/1625812821711.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://cosmoslazycat.github.io/post-images/1625812965629.png" alt="" loading="lazy"></figure>
<h2 id="二-改动后">二、改动后</h2>
<figure data-type="image" tabindex="5"><img src="https://cosmoslazycat.github.io/post-images/1625896665955.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="6"><img src="https://cosmoslazycat.github.io/post-images/1625896675520.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="7"><img src="https://cosmoslazycat.github.io/post-images/1625896683796.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="8"><img src="https://cosmoslazycat.github.io/post-images/1625896691340.png" alt="" loading="lazy"></figure>
<h2 id="总结">总结</h2>
<p>改成自己喜欢的样子，确实增加了不少写博客的兴趣，努力更新博客！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[CSS]flex布局]]></title>
        <id>https://cosmoslazycat.github.io/post/cssflex-bu-ju/</id>
        <link href="https://cosmoslazycat.github.io/post/cssflex-bu-ju/">
        </link>
        <updated>2021-06-24T06:24:12.000Z</updated>
        <content type="html"><![CDATA[<h2 id="一-创建flex布局">一、创建flex布局</h2>
<h3 id="1-区别">1, 区别</h3>
<p>div（块状元素）</p>
<pre><code>display:flex;
</code></pre>
<p>span（内联元素)</p>
<pre><code>display:inline-flex;
</code></pre>
<h3 id="2作用区域">2，作用区域</h3>
<table>
<thead>
<tr>
<th>作用在flex容器(container)</th>
<th>作用在flex子项(item)</th>
</tr>
</thead>
<tbody>
<tr>
<td>flex-direction</td>
<td>order</td>
</tr>
<tr>
<td>flex-wrap</td>
<td>flex-grow</td>
</tr>
<tr>
<td>flex-flow</td>
<td>flex-shrink</td>
</tr>
<tr>
<td>justify-content</td>
<td>flex-basis</td>
</tr>
<tr>
<td>align-item</td>
<td>flex</td>
</tr>
<tr>
<td>align-content</td>
<td>align-self</td>
</tr>
</tbody>
</table>
<h2 id="二-详细">二、详细</h2>
<h3 id="作用在flex容器上的属性">作用在flex容器上的属性</h3>
<h4 id="1flex-direction">1，flex-direction</h4>
<p>row和row-reverse<br>
column和column-reverse<br>
<img src="https://cosmoslazycat.github.io/post-images/1625811948582.svg" alt="" loading="lazy"></p>
<p>2，flex-wrap<br>
<img src="https://cosmoslazycat.github.io/post-images/1625811974514.svg" alt="" loading="lazy"></p>
<pre><code>.container {
  flex-wrap: nowrap | wrap | wrap-reverse;
}
</code></pre>
<h4 id="3flex-flow">3，flex-flow</h4>
<pre><code>.container {
  flex-flow: column wrap;
}
</code></pre>
<h4 id="4justify-content">4，justify-content</h4>
<figure data-type="image" tabindex="1"><img src="https://cosmoslazycat.github.io/post-images/1625811996366.svg" alt="" loading="lazy"></figure>
<pre><code>.container {
  justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly | start | end | left | right ... + safe | unsafe;
}
</code></pre>
<h4 id="5-align-items">5, align-items</h4>
<figure data-type="image" tabindex="2"><img src="https://cosmoslazycat.github.io/post-images/1625812008548.svg" alt="" loading="lazy"></figure>
<pre><code>.container {
  align-items: stretch | flex-start | flex-end | center | baseline | first baseline | last baseline | start | end | self-start | self-end + ... safe | unsafe;
}
</code></pre>
<h4 id="6-align-content">6, align-content</h4>
<figure data-type="image" tabindex="3"><img src="https://cosmoslazycat.github.io/post-images/1625812021771.svg" alt="" loading="lazy"></figure>
<pre><code>.container {
  align-content: flex-start | flex-end | center | space-between | space-around | space-evenly | stretch | start | end | baseline | first baseline | last baseline + ... safe | unsafe;
}
</code></pre>
<h3 id="作用在flex子项item上的属性">作用在flex子项(item)上的属性</h3>
<h4 id="1-order">1. order</h4>
<figure data-type="image" tabindex="4"><img src="https://cosmoslazycat.github.io/post-images/1625812032539.svg" alt="" loading="lazy"></figure>
<pre><code class="language-css">.item {
  order: 5; /* 默认值为 0 */
}
</code></pre>
<h4 id="2-flex-grow">2. flex-grow</h4>
<figure data-type="image" tabindex="5"><img src="https://cosmoslazycat.github.io/post-images/1625812042359.svg" alt="" loading="lazy"></figure>
<pre><code class="language-css">.item {
  flex-grow: 4; /* default 0 */
}
</code></pre>
<h4 id="3-flex-shrink">3. flex-shrink</h4>
<pre><code class="language-css">.item {
  flex-shrink: 3; /* default 1 */
}
</code></pre>
<h4 id="4-flex-basis">4. flex-basis</h4>
<pre><code class="language-css">.item {
  flex-basis:  | auto; /* 默认值为 auto */
}
</code></pre>
<h4 id="5-flex">5. flex</h4>
<pre><code class="language-css">.item {
  flex: none | [ &lt;'flex-grow'&gt; &lt;'flex-shrink'&gt;? || &lt;'flex-basis'&gt; ]
}
</code></pre>
<h4 id="6-align-self">6. align-self</h4>
<figure data-type="image" tabindex="6"><img src="https://cosmoslazycat.github.io/post-images/1625812062868.svg" alt="" loading="lazy"></figure>
<pre><code>.item {
  align-self: auto | flex-start | flex-end | center | baseline | stretch;
}
</code></pre>
<h3 id="三-实际运用">三、实际运用</h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[CSS]css实现禁止用户拖拽元素]]></title>
        <id>https://cosmoslazycat.github.io/post/csscss-shi-xian-jin-zhi-yong-hu-tuo-zhuai-yuan-su/</id>
        <link href="https://cosmoslazycat.github.io/post/csscss-shi-xian-jin-zhi-yong-hu-tuo-zhuai-yuan-su/">
        </link>
        <updated>2021-06-23T23:16:08.000Z</updated>
        <content type="html"><![CDATA[<h3 id="一-用户行为相关属性">一、用户行为相关属性</h3>
<p><code>user-select</code></p>
<p><code>user-modefy</code></p>
<p><code>user-drag</code></p>
<h3 id="二-示例">二、示例</h3>
<h4 id="1通过user-drag限制用户拖拽元素">1，通过user-drag限制用户拖拽元素</h4>
<p>HTML</p>
<pre><code>&lt;img src=&quot;xxx.jpg&quot; class=&quot;user-drag&quot;&gt;
</code></pre>
<p>CSS</p>
<pre><code>.user-drag {
	-webkit-user-drag: none;
}
</code></pre>
<h5 id="兼容性httpscaniusecomsearch-webkit-user-drag">兼容性（<a href="https://caniuse.com/?search=-webkit-user-drag">https://caniuse.com/?search=-webkit-user-drag</a>）</h5>
<figure data-type="image" tabindex="1"><img src="https://cosmoslazycat.github.io/post-images/1625786453666.png" alt="" loading="lazy"></figure>
<p>解读：IE不支持，chrome仅支持部分功能，移动端不支持</p>
<h4 id="2html-draggable属性">2，HTML <code>draggable</code>属性</h4>
<pre><code>&lt;img src=&quot;xxx.jpg&quot; draggable=&quot;true&quot;&gt;  // 可拖拽

&lt;img src=&quot;xxx.jpg&quot; draggable=&quot;false&quot;&gt;  //不可拖拽
</code></pre>
<h5 id="兼容性">兼容性</h5>
<figure data-type="image" tabindex="2"><img src="https://cosmoslazycat.github.io/post-images/1625786294969.png" alt="" loading="lazy"></figure>
<p>解读：兼容性优秀，移动端全部支持，IE10-11浏览器也支持</p>
<h3 id="总结">总结</h3>
<p>在处理禁止用户使用拖拽的场景时，优先使用HTML<code>draggable</code></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[blog](持续更新)Interesting Blog！]]></title>
        <id>https://cosmoslazycat.github.io/post/tui-jian-interesting-blog/</id>
        <link href="https://cosmoslazycat.github.io/post/tui-jian-interesting-blog/">
        </link>
        <updated>2021-06-23T09:43:19.000Z</updated>
        <content type="html"><![CDATA[<h3 id="blog">BLOG</h3>
<p><a href="https://www.kawabangga.com/">卡瓦邦噶</a><br>
<a href="https://pythonhunter.org/">捕蛇者说</a><br>
<a href="http://laker.me/blog/">一位进击的程序媛</a></p>
<h3 id="website">WEBSITE</h3>
<p><a href="www.freecodecamp.org">freecodecamp</a><br>
<a href="codepen.io">codepen</a><br>
<a href="github.com">github</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[blog]如何提升网站页面加载速度]]></title>
        <id>https://cosmoslazycat.github.io/post/ru-he-ti-sheng-wang-zhan-ye-mian-jia-zai-su-du/</id>
        <link href="https://cosmoslazycat.github.io/post/ru-he-ti-sheng-wang-zhan-ye-mian-jia-zai-su-du/">
        </link>
        <updated>2021-06-23T03:04:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="一-测试网站速度">一、测试网站速度</h3>
<p>腾讯云服务器DNS配置TXT记录：</p>
<ul>
<li>在控制台选择DNS解析</li>
<li>进入DNS解析配置</li>
<li>输入GSC提供的txt记录值</li>
</ul>
<h4 id="1google-search-console">1，<a href="https://search.google.com/search-console/about">Google Search Console</a></h4>
<h4 id="2pagespeed-insights">2，<a href="https://developers.google.com/speed/pagespeed/insights/">PageSpeed Insights</a></h4>
<h4 id="3gtmetrix">3，<a href="https://gtmetrix.com/">GTmetrix</a></h4>
<br />
<h3 id="二-优化思路">二、优化思路</h3>
<h4 id="1图片">1，图片</h4>
<ul>
<li>
<p>1.1图片优化<br>
工具：TinyPNG</p>
</li>
<li>
<p>1.2图片格式优化<br>
PNG 加载慢<br>
JPGS<br>
WEBP</p>
</li>
<li>
<p>1.3图片分辨率优化<br>
方案：在img标签内声明图片分辨率，以便提高浏览器的渲染速度</p>
</li>
</ul>
<pre><code>&lt;img src=”puppy.jpg” width=”640&quot; height=”360&quot; alt=”Puppy with balloons” /&gt;
</code></pre>
<br />
<h4 id="2javascript和css引用min版">2，JavaScript和css引用min版</h4>
<p>资源：</p>
<ul>
<li><a href="https://cssminifier.com/">https://cssminifier.com/</a></li>
<li><a href="https://javascript-minifier.com/">https://javascript-minifier.com/</a></li>
</ul>
<p>还可以通过使用<a href="https://gtmetrix.com/enable-text-compression.html#how-to-enable-text-compression">enable Gzip compression</a> 进一步缩小引用文件的大小<br>
<br /></p>
<h4 id="3谨慎使用第三方脚本">3，谨慎使用第三方脚本</h4>
<br />
<h4 id="4使用vps托管服务">4，使用VPS托管服务</h4>
<br />
<h4 id="5使用cdn">5，使用CDN</h4>
<br />
<h4 id="6延迟javascript加载">6，延迟JavaScript加载</h4>
<p>资料：<a href="https://flaviocopes.com/javascript-async-defer/">how to efficiently load JavaScript with <em>defer</em></a>.</p>
<p>使用defer属性：</p>
<pre><code>&lt;script defer src=&quot;script.js&quot;&gt;&lt;/script&gt;
</code></pre>
<br />
<h4 id="7利用浏览器缓存">7，利用浏览器缓存</h4>
<p>资料：<a href="https://www.hostinger.com/tutorials/website/improving-website-performance-leveraging-browser-cache#Leveraging_Browser_Cache_Using_htaccess">enable browser caching from your .htaccess file by setting an expiration date for your assets</a>.</p>
<p>告诉浏览器要保存缓存的方式<br>
<br /></p>
<h4 id="8使用懒加载lazy-loading">8，使用懒加载（lazy loading）</h4>
<p>资料： <a href="https://www.sitepoint.com/five-techniques-lazy-load-images-website-performance/">five more ways to implement lazy loading</a></p>
<pre><code>&lt;img src=”myimage.jpg” loading=”lazy” alt=”…” /&gt;
&lt;iframe src=”content.html” loading=”lazy”&gt;&lt;/iframe&gt;
</code></pre>
<br />
待续。。。]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[翻译]如何努力工作]]></title>
        <id>https://cosmoslazycat.github.io/post/fan-yi-ru-he-nu-li-gong-zuo/</id>
        <link href="https://cosmoslazycat.github.io/post/fan-yi-ru-he-nu-li-gong-zuo/">
        </link>
        <updated>2021-06-22T14:09:31.000Z</updated>
        <content type="html"><![CDATA[<p>原文: <a href="http://paulgraham.com/hwh.html">How To Work</a><br>
  关于如何努力工作，似乎没有什么可说的，任何上过学的人都知道。有一些12岁的孩子，他们的努力程度令人吃惊。但现在我对「努力工作」又有了更深的理解。</p>
<p>  我知道如果想做伟大的事情，就必须非常努力地工作。我小时候对这一点并不确定：学校作业的难度各不相同；一个人并不总是要非常努力才能做得好。而一些牛人似乎不费吹灰之力就能把事情做好。我曾经认为是不是可以通过纯粹的聪明才智来达到目的？现在我知道了，没有。</p>
<p>  一些学科看起来很容易的原因是我的学校的标准很低。而牛人似乎毫不费力的原因是多年的实践；他们使事情看起来很容易。</p>
<p>  当然，那些牛人通常也有天赋。要取得杰出的成绩需要有三个要素：天赋、实践和努力。只用其中两个就可以做得很好，但要做到最好，则需要全部三个：你需要有很好的天赋，经过大量的练习，并且要非常努力。</p>
<p>  例如，比尔-盖茨是他那个时代商业领域最聪明的人之一，同时也是最勤奋的人之一。他说：&quot;我在二十多岁时从未休息过一天，一次都没有。&quot; 梅西的情况也类似，他有很好的天赋，但当他的青年教练谈到他时，他们记住的不是他的天赋，而是他的奉献精神和求胜欲望。如果让我选择20世纪最佳英国作家的话，我会投 P.G.Wodehouse 一票。74岁时，他写道：</p>
<p>  我每写一本新书，就像我在文学的花园里摘了一个柠檬。这确实是一件好事，它使人保持清醒的头脑，使人把每句话重写 10 遍。很多情况下甚至是 20 遍。</p>
<p>  听起来有点极端。但是比尔-盖茨听起来更极端。十年来没有一天休息？这两个人拥有很好的天赋，但他们也像任何人一样努力工作。这两个你最好都需要。</p>
<p>  这似乎很明显，但在实践中我们发现并不是这样。在天赋和努力工作之间存在着一种微弱的对立。它部分来自于文化，部分源于牛人比较罕见。如果很好的天赋和很强的驱动力都是罕见的，那么拥有两者的人就是罕见的平方。你遇到的大多数人，如果一个人很有天赋，另一个大概率就会比较少。但是，如果你想成为一个杰出的人，就需要这两样东西。由于你无法真正改变你的天赋，你能做的，就只剩下努力工作了。</p>
<p>  如果你有明确的、外部设置的目标，就像在学校那样，那么努力工作是很直接的一件事。这其中有一些技巧：你必须学会不欺骗自己，不拖延时间（这也是一种欺骗自己的形式），不分心，遇到阻碍时不放弃。但这种程度的自律似乎主要是针对年轻人。</p>
<p>  我从小学到的是如何朝着既没有明确定义也没有外部强加的目标努力。如果想做出不错的成绩，你可能必须同时学会这两点。</p>
<p>  其中最基本的要求是觉得你应该工作，不需要任何人告诉你。现在，当我不努力工作时，警钟就会响起。我不确定是否有进展，但当我不努力时，我可以确定没有进展，这感觉很不好。</p>
<p>  像大多数小孩子一样，我很享受学习或完成新事情时的成就感。随着年龄的增长，当我没有取得任何成就时，这种感觉就演变成了一种厌恶感。我印象很深刻，在我13岁时就不再看电视了。</p>
<p>  我与几个人交谈过，他们差不多都是在这个年龄段开始认真对待工作。我问帕特里克-科里森，他是什么时候开始觉得讨厌无所事事的感觉的，他说：</p>
<p>  大约是在13或14岁。我清晰地记得我坐在起居室里，盯着外面，想知道为什么就这么浪费自己的暑假。</p>
<p>  也许在青春期有什么变化？</p>
<p>  奇怪的是，认真工作的最大障碍可能来自学校，它使工作（他们所谓的工作）看起来很无聊，毫无意义。我们必须先了解什么是真正的工作，才能全心全意地渴望去做。这需要一段时间，因为即使在大学里，很多工作也是毫无意义的；甚至整个部门都是毫无意义的。但是，当我了解到真正工作的形态时，我发现我对工作的渴望与之契合，就好像它们是为彼此而生的。</p>
<p>  我想大多数人需要先了解什么是工作，然后才能爱上它。哈代在《一个数学家的辩白》中论述了这一点。</p>
<p>  我不记得我小时候对数学有什么热情，我对数学家这个职业有过一些想法，但也认为这只是一份工作而已。我对数学的看法就是考试和奖学金：我想打败其他孩子，而我可以轻松地做到这点。</p>
<p>  他直到大学，读了乔丹的《分析课》 (Cauchy’s Cours d’analyse)后，才知道数学的真正含义，。</p>
<p>  我永远不会忘记我在阅读那本了不起的著作时的惊喜，它是我们这一代许多数学家的启蒙书，我在阅读它时第一次知道了数学的真正含义。</p>
<p>  为了理解什么是真正的工作，你需要甄别两种「假工作」。一种是哈代在学校遇到的那种。当课题被改编为教给孩子们时，它们就被扭曲了，常常被扭曲到与实际工作完全不同。另一种是某些类型的工作所固有的。有些类型的工作本质上是假的，或者充其量只是忙碌的工作。</p>
<p>  真正的工作都有种共性，但也是一个模糊的标准，而且故意模糊的，因为它必须涵盖很多不同的类型。</p>
<p>  一旦你知道真正工作的样子，你就必须学会每天花多少小时来做。这不是简单地在每个清醒的时间工作就行，因为在许多种工作中会有一个临界点，超过这个点，结果的质量就会开始下降。</p>
<p>  这个限度因工作类型和个人而异。我做过几种不同类型的工作，每种工作的极限都不一样。我对较难的写作或编程类型的极限是每天约5小时。而当我在经营一家创业公司时，我可以一直工作。至少在我做的那三年里是这样；如果要坚持得更久，可能需要偶尔休假。</p>
<p>  找到极限的唯一方法就是跨越它。培养对你所做的工作质量的敏感性，然后你就会注意到它是否因为你工作得太辛苦而下降了。诚实在这里至关重要，它包括两个方面：你必须注意到你什么时候在偷懒，但也要注意到你什么时候工作太辛苦。如果你认为工作太辛苦有什么值得骄傲的地方，请把这个想法去掉。你不仅会有更糟糕的结果，还可能是在对别人，或者对自己炫耀。</p>
<p>  找到努力工作的极限是一个持续不断的过程。工作的难度和你的能力都会因时而异，所以你需要不断判断你的努力程度和你的表现。</p>
<p>  不过，努力工作并不意味着不断逼迫自己去工作。可能有一些人是这样的，但我的经验是，我只有在开始一个项目或遇到某个问题时，才会偶尔逼迫自己。那时候我就可能产生拖延症了。但是一旦我开始行动，往往会持续下去。</p>
<p>  让我坚持下去的动力，取决于工作的类型。当我在Viaweb工作时，我被对失败的恐惧所驱动。那时我几乎没有拖延，因为总是有一些事情需要做，如果我可以通过做这些事情把我和竞争者之间拉开更多的距离，为什么还要等呢？而现在驱动我写文章的，是那些缺陷。在两篇文章之间，我纠结了好几天。但一旦我开始决定写某一篇，我就不必逼自己了，因为总有一些错误或遗漏会驱动我。</p>
<p>  我确实会努力关注重要的议题。许多问题都有一个坚硬的核心，边缘是一些比较容易的东西。努力工作意味着在你能做到的范围内瞄准核心。有些时候可能做不到；有些时候，你只能做一些比较容易的、边缘的事情。但你应该总是尽可能地接近中心而不是停滞不前。</p>
<p>  「如何处理你的生活」这一更大的问题是这些硬核问题中的一个。中心有重要的问题，这些问题往往很困难，而边缘的问题则不太重要，比较容易。因此，除了在处理具体问题时涉及的小的、日常的调整外，你偶尔也要对「做哪种类型的工作」做出大的调整。而规则是相同的：努力工作意味着瞄准中心--瞄准对你来说最重要的问题。</p>
<p>  无论是一般情况还是在特定领域内，关于哪些问题是最重要的共识往往是错误的。如果你不同意它，而你又觉得自己是对的，这可能是一个好机会。</p>
<p>  宏伟的工作通常会更难，但也不应该把困难作为决定做什么的唯一参考。如果你发现某些工作类型对你来说比其他人更容易，无论是因为你碰巧拥有的能力，还是因为找到了一些新的方法，或者仅仅是因为你对它更感兴趣，都可以在这方面下功夫。</p>
<p>  除了了解实际工作之外，你还需要弄清楚你适合哪种工作。这意味着要弄清楚你的天赋与哪种工作最匹配；但并不意味着如果你身高7英尺，你就必须打篮球。你适合做什么，不仅取决于你的才能，也许更取决于你的兴趣。对某一主题的浓厚兴趣会让人更努力地工作。</p>
<p>  发现你的兴趣可能比发现你的才能更难。天赋的类型比兴趣少，往往在童年时就开始显现，而兴趣是一种微妙的东西，可能要到20多岁，甚至更晚才会被挖掘出来。此外，还会有一些错误信息需要学会甄别：你是真的对X感兴趣，还是因为你会赚很多钱，或者因为其他人会对你印象深刻，或者因为你的父母希望你这样做，所以你想在这方面努力？</p>
<p>  要弄清楚该从事什么工作，其难度因人而异，差别很大。还是个孩子的时候，你觉得每个人都有自己的使命，他们所要做的就是弄清楚它是什么。电影里是这样的，给孩子们看的故事书里也是这样的，有时现实生活中也是如此。有些人在小时候就想好了要做什么，然后就去做，比如莫扎特。但其他人，如牛顿，则不安分地从一种工作转向另一种。也许回过头来，我们可以确定其中一项是他们的使命--我们可以希望牛顿在数学和物理学上花更多的时间，而在炼金术和神学上花更少的时间--但这就有点事后诸葛亮的意思了。</p>
<p>  因此，虽然有些人的生活快速收敛（知道要做什么，并去做），但也会有一些人的生活从未收敛。对这些人来说，弄清楚要做什么工作与其说是努力工作的前奏，不如说是努力工作的一部分。对这些人来说，我前面描述的过程还有第三个组成部分：在衡量你工作的努力程度和你做得如何的同时，你必须考虑你是否应该继续在这个领域工作，还是转到另一个领域。如果你努力工作，但没有得到足够好的结果，你就应该换。这样表述听起来很简单，但实际上却很难。你不应该在第一天就放弃，只因为你努力工作却没有任何进展。你需要给自己一些时间，让自己有所作为。但是有多少时间呢？如果原本进展顺利的工作不再顺利，你又该怎么办？那时你会给自己多少时间？</p>
<p>  什么样的结果才算好？这确实很难决定。如果你正在探索一个很少有人涉足的领域，你甚至可能不知道好的结果是什么样子。历史上有很多误判了他们所做工作的重要性的例子。</p>
<p>  检验是否值得从事某项工作的最佳标准是你是否觉得它有趣。这听起来可能是一个危险的主观衡量标准，但它可能是你要得到的最准确的标准。你是从事这项工作的人。谁比你更有资格判断它是否重要，还有什么比它是否有趣更能体现它的重要性呢？</p>
<p>  不过，要使这个测试发挥作用，你必须对自己诚实。事实上，这是整个努力工作问题最引人注目的地方：在每一点上都取决于对自己的诚实。</p>
<p>  努力工作不仅仅是每天工作到 11 点。它是一个复杂的、动态的系统，必须在每个点上调整得恰到好处。你必须了解实际工作的样子，清楚地看到你最适合做哪种工作，尽可能地接近它的真正核心，在每个时刻准确判断你的能力和你的表现，并在不损害结果质量的情况下每天投入尽可能多的时间。这个网络太复杂了。但是，如果你始终诚实，目光清晰，它就会自动呈现出最佳形状，你就会以一种很少有人能做到的方式取得成效。</p>
]]></content>
    </entry>
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://cosmoslazycat.github.io</id>
    <title>CosmosLazyCat的宇宙</title>
    <updated>2021-07-29T06:43:13.229Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://cosmoslazycat.github.io"/>
    <link rel="self" href="https://cosmoslazycat.github.io/atom.xml"/>
    <subtitle>自律，才有更大的自由</subtitle>
    <logo>https://cosmoslazycat.github.io/images/avatar.png</logo>
    <icon>https://cosmoslazycat.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, CosmosLazyCat的宇宙</rights>
    <entry>
        <title type="html"><![CDATA[[blog](持续更新)Interesting Website！]]></title>
        <id>https://cosmoslazycat.github.io/post/tui-jian-interesting-blog/</id>
        <link href="https://cosmoslazycat.github.io/post/tui-jian-interesting-blog/">
        </link>
        <updated>2021-07-21T02:35:45.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<h2 id="website">WebSite</h2>
</blockquote>
<p><a href="www.stackoverflow.com">stackoverflow</a> - 常用的提问和解惑网站<br>
<a href="www.freecodecamp.org">freecodecamp</a> - 我的启蒙网站之一<br>
<a href="www.codepen.io">codepen</a> - 很喜欢里面的一些前端设计<br>
<a href="www.github.com">github</a> - 用的不是很多，以后有能力会贡献自己的代码<br>
<a href="www.numerade.com">Numerade</a> - 一个专门为书籍上的问题解惑的网站<br>
<a href="https://teachyourselfcs.com/">teachyourselfcs</a>  - 我的启蒙网站之一<br>
<a href="www.youtube.com">youtube</a> - 常用的自学视频搜索网站<br>
<a href="https://www.yuque.com/zaotalk">前端早早聊</a> - 一个内容质量非常不错的国内前端分享频道（付费）<br>
<a href="www.fullstackopen.com">FullStackOpen</a> - 我的启蒙网站之一<br>
<a href="https://www.ecma-international.org/">ECMA-International</a> - 制定JavaScript标准的ECMA国际组织</p>
<blockquote>
<h2 id="youtube">YouTube</h2>
</blockquote>
<p><a href="https://www.youtube.com/channel/UCKRDt89WYkaRyvmvKoBvNWg">Stuart Davies</a> - 我喜欢的画家之一，画的都是我喜欢的风格<br>
<a href="https://www.youtube.com/channel/UC9ky7GmqwwRTBOjkK8hZ6FA">PhiloArt</a> - 我喜欢的画家之一，自学画画和编程，超厉害的人</p>
<blockquote>
<h2 id="blog">BLOG</h2>
</blockquote>
<p><a href="https://www.kawabangga.com/">卡瓦邦噶</a> - 捕蛇者说主播之一<br>
<a href="http://laker.me/blog/">一位进击的程序媛</a><br>
<a href="coolshell.cn">酷壳</a>  - 耗子叔的个人博客，我的启蒙人之一<br>
<a href="https://godbasin.github.io/front-end-playground/">被删的前端游乐场</a> - 一个努力学习的人<br>
<a href="https://www.tangshuang.net/">唐霜</a> - Robust播客的主理人</p>
<blockquote>
<h2 id="podcast">Podcast</h2>
</blockquote>
<p><a href="https://pythonhunter.org/">捕蛇者说</a> - 喜欢的播客和博客网站<br>
<a href="https://anobody.im/">阿乐杂货铺</a> - 一个在荷兰生活的前端程序媛<br>
<a href="https://www.tangshuang.net/fm">Robust: 程序员的TALK PLACE</a> - 内容和时长都比较硬核的播客<br>
<a href="https://frontendhappyhour.com/">Front End Happy Hour</a> - 内容如其名的播客</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[blog]Gridea主题修改]]></title>
        <id>https://cosmoslazycat.github.io/post/bloggridea-zhu-ti-xiu-gai/</id>
        <link href="https://cosmoslazycat.github.io/post/bloggridea-zhu-ti-xiu-gai/">
        </link>
        <updated>2021-07-20T16:20:19.000Z</updated>
        <content type="html"><![CDATA[<p>作者原主题购买： <a href="https://mianbaoduo.com/o/bread/YpWYlJ0=">https://mianbaoduo.com/o/bread/YpWYlJ0=</a></p>
<h2 id="一-改动前">一、改动前</h2>
<h4 id="导航栏-主页设计">导航栏 + 主页设计</h4>
<figure data-type="image" tabindex="1"><img src="https://cosmoslazycat.github.io/post-images/1625812792694.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="2"><img src="https://cosmoslazycat.github.io/post-images/1625812811980.png" alt="" loading="lazy"></figure>
<h4 id="内容页设计">内容页设计</h4>
<figure data-type="image" tabindex="3"><img src="https://cosmoslazycat.github.io/post-images/1625812821711.png" alt="" loading="lazy"></figure>
<h4 id="代码输入框设计">代码输入框设计</h4>
<figure data-type="image" tabindex="4"><img src="https://cosmoslazycat.github.io/post-images/1625812965629.png" alt="" loading="lazy"></figure>
<h2 id="二-改动后">二、改动后</h2>
<figure data-type="image" tabindex="5"><img src="https://cosmoslazycat.github.io/post-images/1625896665955.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="6"><img src="https://cosmoslazycat.github.io/post-images/1625896675520.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="7"><img src="https://cosmoslazycat.github.io/post-images/1625896683796.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="8"><img src="https://cosmoslazycat.github.io/post-images/1625896691340.png" alt="" loading="lazy"></figure>
<h2 id="总结">总结</h2>
<p>改成自己喜欢的样子，确实增加了不少写博客的兴趣，努力更新博客！</p>
<h2 id="0720更新">0720更新</h2>
<blockquote>
<p>修改图片背景色，使页面与图片背景颜色一致</p>
</blockquote>
<p>改前<br>
<img src="https://cosmoslazycat.github.io/post-images/1626797976162.png" alt="" loading="lazy"></p>
<p>改后<br>
<img src="https://cosmoslazycat.github.io/post-images/1626797996036.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[推荐]城市路网生成工具！]]></title>
        <id>https://cosmoslazycat.github.io/post/blogtui-jian-cheng-shi-lu-wang-sheng-cheng-gong-ju/</id>
        <link href="https://cosmoslazycat.github.io/post/blogtui-jian-cheng-shi-lu-wang-sheng-cheng-gong-ju/">
        </link>
        <updated>2021-07-20T14:16:23.000Z</updated>
        <content type="html"><![CDATA[<p>地址：https://anvaka.github.io/</p>
<h3 id="特点">特点：</h3>
<ul>
<li>可用滚轮放大缩小</li>
<li>背景颜色、网格线颜色自定义</li>
<li>可生成SVG/PNG格式</li>
</ul>
<h3 id="图片展示">图片展示</h3>
<figure data-type="image" tabindex="1"><img src="https://cosmoslazycat.github.io/post-images/1626790788396.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[blog][CSS]CSS实现禁止用户拖拽元素]]></title>
        <id>https://cosmoslazycat.github.io/post/csscss-shi-xian-jin-zhi-yong-hu-tuo-zhuai-yuan-su/</id>
        <link href="https://cosmoslazycat.github.io/post/csscss-shi-xian-jin-zhi-yong-hu-tuo-zhuai-yuan-su/">
        </link>
        <updated>2021-07-05T23:16:08.000Z</updated>
        <content type="html"><![CDATA[<h3 id="一-用户行为相关属性">一、用户行为相关属性</h3>
<p><code>user-select</code></p>
<p><code>user-modefy</code></p>
<p><code>user-drag</code></p>
<h3 id="二-示例">二、示例</h3>
<h4 id="1通过user-drag限制用户拖拽元素">1，通过user-drag限制用户拖拽元素</h4>
<p>HTML</p>
<pre><code>&lt;img src=&quot;xxx.jpg&quot; class=&quot;user-drag&quot;&gt;
</code></pre>
<p>CSS</p>
<pre><code>.user-drag {
	-webkit-user-drag: none;
}
</code></pre>
<h5 id="兼容性httpscaniusecomsearch-webkit-user-drag">兼容性（<a href="https://caniuse.com/?search=-webkit-user-drag">https://caniuse.com/?search=-webkit-user-drag</a>）</h5>
<figure data-type="image" tabindex="1"><img src="https://cosmoslazycat.github.io/post-images/1625786453666.png" alt="" loading="lazy"></figure>
<p>解读：IE不支持，chrome仅支持部分功能，移动端不支持</p>
<h4 id="2html-draggable属性">2，HTML <code>draggable</code>属性</h4>
<pre><code>&lt;img src=&quot;xxx.jpg&quot; draggable=&quot;true&quot;&gt;  // 可拖拽

&lt;img src=&quot;xxx.jpg&quot; draggable=&quot;false&quot;&gt;  //不可拖拽
</code></pre>
<h5 id="兼容性">兼容性</h5>
<figure data-type="image" tabindex="2"><img src="https://cosmoslazycat.github.io/post-images/1625786294969.png" alt="" loading="lazy"></figure>
<p>解读：兼容性优秀，移动端全部支持，IE10-11浏览器也支持</p>
<h3 id="总结">总结</h3>
<p>在处理禁止用户使用拖拽的场景时，优先使用HTML<code>draggable</code></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[翻译]你的设计准则是什么？]]></title>
        <id>https://cosmoslazycat.github.io/post/fan-yi-ni-de-she-ji-zhun-ze-shi-shi-me/</id>
        <link href="https://cosmoslazycat.github.io/post/fan-yi-ni-de-she-ji-zhun-ze-shi-shi-me/">
        </link>
        <updated>2021-06-29T13:42:30.000Z</updated>
        <content type="html"><![CDATA[<p> 一路走来，我学到了一些在设计和商业上经得起时间考验的东西</p>
<p> 我的设计生涯（如果我可以这么说的话）现在已经跨越了数十年。在90年代的某个时候，我为一个朋友的乐队创作了一张7英寸的唱片，我认为这是一个合适的设计。21世纪初，我开始设计网站。到2000年代末，我开始打造品牌。在2010年，我正在发展一项业务，并学习战略和过程的力量。随着我们进入2020年代，我正在利用我过去几十年所学到的知识，成长为一个更加独立的个体，探索新事物，并寻找设计职业给我带来的相邻的可能性ーー就像写这篇文章一样。</p>
<p> 下面的准则并不是普遍性真理，但它们是我学到的最重要的一些东西。我希望它们可以帮助你的创作之旅。</p>
<h3 id="1字体就是一切">1，字体就是一切</h3>
<p> 好的字体设计在平面设计学科中的价值不能被低估。字体是一切设计的成败关键，懂得如何有效地使用字体可以区分好的作品和伟大的作品。说到排版设计，设计师需要擅长两件事: 字体的选择和字体在设计中的使用。好的字体选择需要你知道什么是好的字体，以及在哪里可以找到它们。</p>
<p> 一个当代的平面设计师必须非常在意字体，就像一个唱片收藏家一样，必须具有良好的品味，知道被设计的主题与字体和字体系统之间的细微差别和相互关联，这种字体和字体系统最适用于手头的目的，最具表现力。工作室只是少数几家小型铸造厂，它们没有获得足够的赞誉，因为它们的工艺不足以开发出一种字体，这种字体能够让一个有能力的平面设计师为生活带来一个伟大的设计解决方案。没有伟大的字体设计师，就没有伟大的平面设计师。</p>
<p> 有永不过时的字体(Garamond，Helvetica) ，时髦的字体(还记得 Brown 风靡一时的时候吗?)以及其间的一切。今天新鲜的、未被过度使用的东西，明天将不再新鲜、被过度使用。保持你运用字体的能力，包括组成、创造性和易读性，同时对新面孔的出现保持热情和意识是至关重要的。</p>
<p> 在最近 John Mayer 对 Kerwin Frost 的有趣访谈中(25:10 In) Mayer 谈到免费字体是多么的“狗屁”，当你在唱片封面或网站上看到免费字体时，你就能分辨出来。约翰接着说，花钱买一个好字体是为了投资于质量，当你使用一个不合格的免费字体时，“你的大脑不知道，但你的心可以告诉你。”我对梅耶先生的音乐作品并不十分熟悉，但我很高兴看到有人创作具有广泛吸引力的流行音乐，总结了为什么伟大的字体很重要，尤其是当你创作的作品在世界范围内像音乐这样的文化作品时。正如约翰所说: “只要买字体！。</p>
<h3 id="2-好的品味很难教更难掌握">2, 好的品味很难教，更难掌握</h3>
<p> 我发现每个设计师都有自己的个人品味，这影响着他们如何进行设计。你的品味是你经历的产物，也是你灵感和影响的深度和广度的产物。一个人的个人品味并不总是适合每个客户的项目，所以挑战就是在充分利用你自己的品味的同时，也要理解你所做的工作的好品味是什么。个人品味是无法教授的: 它来自于你如何看待这个世界。</p>
<p> 在设计学科的背景下，良好的品味是一个人的能力，把美丽和复杂的设计方法，同时也使其适合客户的需要，使其共鸣的方式被认为是当代和令人惊叹的时刻。你需要这样做，同时也用你的个人品味作为过滤器。在你喜欢什么，现在优秀设计的世界是什么样子，以及什么对客户来说是正确的之间的舞蹈，对每个设计师来说都是独一无二的。解决这个复杂的方程式只需要良好的品味，只有通过你自己的创造性的好奇心和意志才能找到。</p>
<p> 也就是说，和其他有品味的设计师在一起是有帮助的。与非常有才华的人一起工作会鼓励你发挥自己的能力和你的观察方式。你必须是一个好的观察者和一个好的管理者，管理你自己的审美冲动。当我想到好品味时，我立刻想到意大利时装企业家 Alessandro Squarzi。斯夸兹先生有很好的品味，你可以通过他的 Instagram 看到，他是如何将 Pitti Uomo 复杂的文化词汇与美国古典和军事融合在一起，并融入自己的个人审美观。他的好品味是他一生在时尚界磨练手艺的成果。平面设计师寻求这种同样水平的审美平衡，这是你只能通过无情的启发才能学到的东西。作为一个品牌的例子，我认为 Manual Creative 为思达瓦和田径公司所做的工作是思杰良好工作品味的典范。这两个项目都表现出了一定程度的成熟、克制和对客户及其使命的尊重，这只有来自于对如何运用良好品味将一个伟大品牌带入生活的坚定把握。</p>
<h3 id="3-领导力来自内心">3, 领导力来自内心</h3>
<p> 如果说我在过去25年里学到了什么关于商业的话，那就是不是每个人都想领导项目。领导是一项很大的责任，而且总是有很多的未知数。这可能是可怕的，而且最重要的是，当你领导时，人们认为你有正确的答案，但事实往往并非如此。我用的一个比喻是想象一个好的领导者就像森林里的向导。一个有经验的向导比一个没有经验的好，但是没有人能保证你不会走错路或迷路。领导者正在努力从众所周知的创造性森林中找到正确的道路，即使这需要绕道，避开悬崖，或者逃离熊。通过这种方式，一个好的领导者在为项目成果承担责任的同时促进并提供方向。</p>
<p> 当谈到为我设计的时候，当你想成为一个领导者的时候，有一个简单的差异在你的脑海中成长; 你从想要“制造”某些具体的东西到想要“解决”某些更大的东西。制作一些东西是有趣的。当你“做”的时候，没有正确或错误的答案。我喜欢做东西。我喜欢探索各种想法。但这不同于被驱使去解决一个更大的问题和领导。作为一个真正的项目领导者，你正试图通过团队的组建找到正确的解决方案。你正在努力识别所有的意外情况和潜在的陷阱。为什么这很重要？当你为了钱而做一个项目的时候，你必须达到一个终点，客户感觉他们已经得到了他们所付出的，团队必须感觉他们已经尽了他们最大的努力完成了他们的工作。真正的领导者会确保这个结果始终是每一步的首要任务。</p>
<p> 我认为有些人比其他人更热衷于领导，我把他们分成两组。有一类人在历史频道上看传记，他们对一个想法充满激情和动力，而且常常非常自私和古怪。有无数的领导者，我们可以说出他们的才能、远见和个人傲慢都融为一体。这些人往往被视为比生命更伟大的人。说实话，我不是很喜欢这种领导原型，因为它把一个人作为唯一的作者放在聚光灯下，我们都知道这完全是胡说八道。做伟大的事情需要不止一个人的愿景，我认为相信一个人有所有的答案是不公平和有偏见的假设。它忽略了所有其他人，让项目发生和做艰苦的工作。</p>
<p> 另一种类型的领导者被驱使去为工作和理念服务，而不是被自我驱使。每个领导者都想解决问题，但伟大的领导者是那些永不厌倦实现目标的人。我有幸与少数极具创造力的人共事，其中一些人也是领导者。我所知道的那些有创造力的领导者都是杰出的，他们能够巧妙地平衡他们的工艺和领导者解决更大问题所需要的众多依赖性。他们既是创造者又是管理者。制造者和解决者。领袖和士兵。我真的很钦佩这种类型的领导者，因为他们总是贴近工作，知道把伟大的事物带到生活中需要付出多少汗水和痛苦。对于那些有兴趣了解一个设计师作为领导者的经历的人们，我强烈推荐这个频率播客: 没有一致性的团结与格雷特尔的设计主管迪伦 · 马尔瓦尼</p>
<h3 id="4-写作和表达创造性思维的能力是至关重要的">4, 写作和表达创造性思维的能力是至关重要的</h3>
<p> 随着你作为一个设计师的成长，你会发现你的作品不会像你希望的那样为自己说话。其他人不是你，他们总是有他们自己的解释什么是呈现。作为人类，我们通过自己的偏好和经历来看待世界，这使得整个美学世界相当主观。当你开发品牌的时候，这种主观性是非常令人沮丧的。</p>
<p> 有些人，比如客户，可能没有你那么好的品味，可能会爱上一个你觉得不如你想法好的点子。解决这种主观偏好的唯一方法是通过书面和口头的争论。你必须能够向客户展示他们的主观偏好如何对项目的结果产生负面影响。如果你不这样做，那么这只是一个关于个人品味的主观讨论，你会同意不同意，这将是一个僵局。</p>
<p> 这真的是一件需要理解的重要事情ーー你必须能够说服非视觉人士欣赏和理解你的创意作品的语言合理化，这样他们才能在作品中看到你的想法。你必须向他们展示光明，你不仅要说服他们你的想法更好，你还必须解释你的想法如何与商业目标和底线相联系。作为一个平面设计师，你必须能够在会议上口头上做到这一点，在简短的形式为一个演示，以及在长形式的电子邮件。我发现，这是唯一的方法，以确保你的想法，可能不是主观上首选将被理解为客观上的优越解决方案。</p>
<h3 id="5-孤独与合作是相辅相成的">5, 孤独与合作是相辅相成的</h3>
<p> 我花了几千个小时在电脑前设计东西。数小时不停地对字体大惊小怪，调整关键帧，渲染，制作一百万个不同的 logo 版本——你说得出来。我很大程度上都是独自完成这种工作，或者戴着耳机与外界隔绝。这部深刻的作品只有独处才能提供给我，它对于提高我的技艺是不可或缺的。分心的事情越少，我学到的就越多。</p>
<p> 多年来，我发现独自工作只有在某种程度上是好的。如果你没有其他人可以交流想法，你可能会陷得太深，变成《现代启示录》中库尔茨上校的创造性版本。合作意味着一起工作，但也意味着“共同劳动”作为一个设计师，我们从来没有真正“一起工作”，因为我们一起努力，为了一个共同的目标。我们在个人的孤立中相互支持，通过一个想法来工作，我们在努力做一些真正好的事情的过程中寻求彼此的安慰和指导。</p>
<p> 许多年前，我有一个富有创造力的搭档，非常有天赋，但是不管别人说什么，他们都必须按照自己的方式做事。他们必须选择一条道路，而我必须让他们在自己的时间里失败或成功。我非常想给他们“答案”，但是他们总是不得不自己去寻找，即使那是我想去的地方。我发现这非常令人沮丧，但多年后我意识到，尽管我们本应该一起工作，但我们实际上是在一起工作，作为支持者和啦啦队长站在一边，而不是给出答案，这是同样有意义的。</p>
<h3 id="6-不要把设计场景和设计工作混为一谈">6, 不要把设计场景和设计工作混为一谈</h3>
<p> 我是一个设计迷。一直都是。不管是设计、插图还是艺术，对我来说最吸引人的还是作品本身。我总是被创造性的工作所吸引，这些创造性的工作激励着我，激励着我更加努力地工作，变得更好。随着你职业生涯的成长，你会遇到其他设计师，并可能成为任何数量的设计组织的成员，如 AIGA 或 d &amp; ad。这些组织可以是一个很好的方式来建立联系，并可能赢得奖项。这些都是好东西，但就像一个有趣的 Twitter 帖子，它们可能会占用你很多时间，而你可能应该设计它们。</p>
<p> 我喜欢使用的比喻是，作为一个赛车手是非常不同的赛车爱好者俱乐部的一员。创意机构就像赛车公司，他们是为表演而设计的。设计组织更像粉丝俱乐部，他们的设计是为了支持和庆祝机构工作的成果。我当然是一个设计迷，想要在一个会议或者演讲中见到我的一些设计英雄，但是这是一个非常短暂的事情。最终，我所拥有的最有意义和最持久的创造性的关系是通过项目工作或通过与我的设计同事多年来培养的更深层次的互动。</p>
<p> 成为一个设计超级粉丝是完全可以的，但是你自己的工作应该放在第一位。在“现场”花费太多的精力，无论是在网上还是面对面，都可以立即让你感到满足，但这并不能替代你的工作和提高你的技能。没有伟大的创造性工作，你只是一个旁观者。</p>
<p> 在一些设计师中，也有一种被同行验证的发自内心的渴望。达到设计的聚光灯可以是一个短暂的练习，成为一个设计名人，无论这意味着什么，是一个微妙的事情想要成为。想要受欢迎的本质是一种自私和奇怪的，往往是你内心某种东西的副产品，而不是你创造的实际工作。想要你的工作被认可和欣赏是很自然的事情，但是只有通过做伟大的工作你才能获得认可。除了伟大的工作，还有其他一些因素可能会发挥作用——在正确的时间出现在正确的地点，为某个人或组织在非常受欢迎的文化中做一些事情，并获得“余辉”、运气、市场营销等等。寻求创造性的认可往往会被认为是自私自利或者不真诚。当它来临时，欣赏它是一种更甜蜜的奖励。只要记住，工作就是论文。花时间去做令人惊叹的工作是很难的，也是唯一真正的道路。其他的也会跟着来。</p>
<h3 id="7-你掌握的背景越多你做出的决定就越好">7, 你掌握的背景越多，你做出的决定就越好</h3>
<p> 作为一个设计师，理解一个行业的大局和你的客户的目标和具体需求是至关重要的，并作为一个重要的投入，以作出更好的创造性的决定。这里有一个简单的例子: 如果你客户的直接竞争对手使用蓝色作为主要的品牌颜色，也许你不应该使用蓝色，即使你真的喜欢蓝色。除非你知道谁是你客户的直接竞争对手，否则你不会知道如何决定这个颜色。环境是帮助你做出明智的创造性决定的关键。环境也可以帮助设计师避免在真空中设计，可以给你客户的 CEO 和 CMO 需要听到的信息，这样他们就可以合理化你的创造性解决方案，并同意这是一个合适的解决方案。这听起来像是常识，但却出人意料地不同寻常。设计师们忙于制作，忽略了一些非常实用的东西，无论是在工作本身，还是在客户所服务的行业，这些东西可能会对客户眼中的伟大创意产生负面影响，甚至是否定。记住做好你的功课，并且能够简明扼要地阐述行业或客户类别的挑战，客户需要解决的具体事情，以及你的设计决策如何解决这些问题。</p>
<p> 我最新的行业背景和见解是电子邮件时事通讯奥夫基尔特写的资深品牌战略家和前战略负责人在沃尔夫奥林斯纽约保罗沃辛顿。保罗对他的工作充满热情，同样对理解影响全球品牌的商业发展趋势和决策充满热情。Off Kilter 是非常聪明和黑麦，并提供了一个紧凑的蒸馏发生在商业上的一些更大的运动，因为它涉及品牌。</p>
<h3 id="8-价值多少算多少">8, 价值多少算多少</h3>
<p> 如何为设计工作收费从来都不是一个完美的公式。有很多因素。我经常问自己的三个问题是: “它会让你变得富有吗?””这会让你出名吗?”或者”这会让你开心吗?”我发现，如果你在项目结束时不快乐，其他两个因素就不那么重要了。</p>
<p> 幸福是每个项目的最终目标，但金钱确实很重要。以有竞争力的费用交换创造性服务创造了一种合同形式，鼓励双方遵守规则，更加尊重彼此。如果你收取的是你的时间和专业知识的真正价值，你和你的团队将投入额外水平的努力来交付，客户将期望你付出同样水平的努力，并尊重你创造的工作。</p>
<p> 有时候我会花更少的钱做一些工作，因为我真的很想做这个项目。但是在这样做的过程中，不管是不是经常，我变得不满意，我的脑海中有一个声音感觉到他们应该更加感激和接受“现状”的想法，因为他们得到了一个协议。这让我处于一种错误的心态去做我最好的工作，让双方都能做出更加主观和情绪化的决定。我发现，如果你觉得自己被利用了，如果客户觉得他们正在达成协议，那么你几乎不可能为别人做出伟大的工作。</p>
<h3 id="9-永远不要停止学习永远不要停止犯错">9, 永远不要停止学习，永远不要停止犯错</h3>
<p> 学习新技能和天赋一样重要。我们永远都是学生。设计的基础是永恒的，但是创意产业总是在变化的。随着文化、技术和社会的进步，设计师的工作也在进步。关于设计有一种不言而喻的摩尔定律。我相信每隔18个月，设计的进步就会明显地跟上软件和业务流程的步伐。</p>
<p> 随着改变而来的是犯错误。你必须做很多错事才能得到正确的结果。我认为没有捷径可走。接受改变和犯错至少是设计师工作的一半。你越早意识到这一点并接受它，你的工作就会越有趣。你无法抗拒改变。你必须接受它，并向它倾斜。我宁愿看到有人尝试一个奇怪的新想法然后失败，而不是仅仅给我看我以前见过的东西。当有人向我展示一个新的软件或者一个正在进行的新趋势时，我总是很兴奋。我们越接近我们认为正确的东西，它就离我们越远。正是这种前进的动力让事情保持新鲜、新鲜和充满活力。</p>
<h3 id="10-努力工作得到回报">10, 努力工作得到回报</h3>
<p> 我不是一个健身爱好者，但我熟悉五届健身冠军马特 · 弗雷泽，他刚刚从比赛中退役。在连续赢得2016-2020年的 CrossFit 运动会之前，马特在2009年世界青少年举重锦标赛之前有一条长长的脊椎骨折断的路。经过实验性的背部手术，他重新振作起来，一天一次，7年多来赢得了他的第一个健身游戏。</p>
<p> 我喜欢马特的故事(他的乔 · 罗根那一集很好听) ，因为它完美地证明了一句古老的格言: 努力工作总会有回报 # hwpo。的确如此。像运动员一样，成为一个真正有天赋的设计师需要时间。它需要你进行无数次单调的设计迭代，创造无数错误的想法，最终获得经验和掌握，得到正确的想法。初出茅庐的年轻设计师往往不能理解这一点。如果你把你的活动限制在你的日常工作中，那么你作为一个设计师不太可能有显著的进步。创造性地超越，就是充满激情地学习，并花费数千小时去改进、成熟和变得更好。这听起来可能很糟糕，但是如果你喜欢某样东西，而且你想在这方面做得更好，那么时间并不重要。你必须让你的销售代表来完善你的技能。简单明了。</p>
<p> 我正在收听 Instagram 直播对我最喜欢的一个创意工作室 Young Jerks 的采访，他们谈到了努力工作的一个特殊层面。有人问: “你如何让你的技能水平达到你的品味水平?”这是一个如此简单而精彩的问题，每个想要变得更好的人都会问自己。唯一的答案就是练习。练习需要时间和努力。我一直在苦苦思索字体的选择，最终的颜色，正式的决定，字距调整，凡是你能想到的。为什么？因为我能感觉到工作可以做得更好。我能感觉到它，如果我继续努力，我就能找到它。这种感觉从未离开过我。那些神奇的时刻，把你的想法从它的创造，然后有那个想法住在你之外，被体验和积极影响他人可以是一件真正深刻的事情。这就是每一首伟大的歌曲的意义所在，也是伟大设计的意义所在。努力工作并不能保证出色的时刻，它只是为更有可能发生的事情搭建了舞台。</p>
<p> 我希望以上的格言能对你有所帮助。他们帮助我度过了创造性和专业性工作中的起起伏伏，但是人们相信真实的东西总是在不断进步的。谢谢阅读。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[blog]如何提升网站页面加载速度]]></title>
        <id>https://cosmoslazycat.github.io/post/ru-he-ti-sheng-wang-zhan-ye-mian-jia-zai-su-du/</id>
        <link href="https://cosmoslazycat.github.io/post/ru-he-ti-sheng-wang-zhan-ye-mian-jia-zai-su-du/">
        </link>
        <updated>2021-06-27T03:04:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="一-测试网站速度">一、测试网站速度</h3>
<p>腾讯云服务器DNS配置TXT记录：</p>
<ul>
<li>在控制台选择DNS解析</li>
<li>进入DNS解析配置</li>
<li>输入GSC提供的txt记录值</li>
</ul>
<h4 id="1google-search-console">1，<a href="https://search.google.com/search-console/about">Google Search Console</a></h4>
<h4 id="2pagespeed-insights">2，<a href="https://developers.google.com/speed/pagespeed/insights/">PageSpeed Insights</a></h4>
<h4 id="3gtmetrix">3，<a href="https://gtmetrix.com/">GTmetrix</a></h4>
<br />
<h3 id="二-优化思路">二、优化思路</h3>
<h4 id="1图片">1，图片</h4>
<ul>
<li>
<p>1.1图片优化<br>
工具：TinyPNG</p>
</li>
<li>
<p>1.2图片格式优化<br>
PNG 加载慢<br>
JPGS<br>
WEBP</p>
</li>
<li>
<p>1.3图片分辨率优化<br>
方案：在img标签内声明图片分辨率，以便提高浏览器的渲染速度</p>
</li>
</ul>
<pre><code>&lt;img src=”puppy.jpg” width=”640&quot; height=”360&quot; alt=”Puppy with balloons” /&gt;
</code></pre>
<br />
<h4 id="2javascript和css引用min版">2，JavaScript和css引用min版</h4>
<p>资源：</p>
<ul>
<li><a href="https://cssminifier.com/">https://cssminifier.com/</a></li>
<li><a href="https://javascript-minifier.com/">https://javascript-minifier.com/</a></li>
</ul>
<p>还可以通过使用<a href="https://gtmetrix.com/enable-text-compression.html#how-to-enable-text-compression">enable Gzip compression</a> 进一步缩小引用文件的大小<br>
<br /></p>
<h4 id="3谨慎使用第三方脚本">3，谨慎使用第三方脚本</h4>
<br />
<h4 id="4使用vps托管服务">4，使用VPS托管服务</h4>
<br />
<h4 id="5使用cdn">5，使用CDN</h4>
<br />
<h4 id="6延迟javascript加载">6，延迟JavaScript加载</h4>
<p>资料：<a href="https://flaviocopes.com/javascript-async-defer/">how to efficiently load JavaScript with <em>defer</em></a>.</p>
<p>使用defer属性：</p>
<pre><code>&lt;script defer src=&quot;script.js&quot;&gt;&lt;/script&gt;
</code></pre>
<br />
<h4 id="7利用浏览器缓存">7，利用浏览器缓存</h4>
<p>资料：<a href="https://www.hostinger.com/tutorials/website/improving-website-performance-leveraging-browser-cache#Leveraging_Browser_Cache_Using_htaccess">enable browser caching from your .htaccess file by setting an expiration date for your assets</a>.</p>
<p>告诉浏览器要保存缓存的方式<br>
<br /></p>
<h4 id="8使用懒加载lazy-loading">8，使用懒加载（lazy loading）</h4>
<p>资料： <a href="https://www.sitepoint.com/five-techniques-lazy-load-images-website-performance/">five more ways to implement lazy loading</a></p>
<pre><code>&lt;img src=”myimage.jpg” loading=”lazy” alt=”…” /&gt;
&lt;iframe src=”content.html” loading=”lazy”&gt;&lt;/iframe&gt;
</code></pre>
<br />
待续。。。]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[分享]计算机学科有意思的比喻]]></title>
        <id>https://cosmoslazycat.github.io/post/fen-xiang-ji-suan-ji-xue-ke-you-yi-si-de-bi-yu/</id>
        <link href="https://cosmoslazycat.github.io/post/fen-xiang-ji-suan-ji-xue-ke-you-yi-si-de-bi-yu/">
        </link>
        <updated>2021-06-25T05:46:49.000Z</updated>
        <content type="html"><![CDATA[<p>原文：<a href="https://twitter.com/laixintao/status/1402663872561958915?s=20">https://twitter.com/laixintao/status/1402663872561958915?s=20</a></p>
<p>小时候喜欢哈利波特，后来觉得学习计算机就像在学习魔法一样。</p>
<ul>
<li>魔咒学 - 计算机组成原理和体系结构</li>
<li>树枝占卜学 - 机器学习</li>
<li>黑魔法防御术 - 信息安全技术</li>
<li>魔法理论 - 可计算理论</li>
<li>魔法史 - Unix发展史</li>
<li>草药学 - 数学</li>
<li>魔药学 - 算法和数据结构</li>
<li>变形学 - 数据库</li>
<li>飞行课 - 操作系统</li>
<li>咒语解析学 - 编译原理</li>
<li>猫头鹰：互联网</li>
<li>魔法杖：编程语言</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[blog][CSS]flex布局]]></title>
        <id>https://cosmoslazycat.github.io/post/cssflex-bu-ju/</id>
        <link href="https://cosmoslazycat.github.io/post/cssflex-bu-ju/">
        </link>
        <updated>2021-06-18T06:24:12.000Z</updated>
        <content type="html"><![CDATA[<h2 id="一-创建flex布局">一、创建flex布局</h2>
<h3 id="1-区别">1, 区别</h3>
<p>div（块状元素）</p>
<pre><code>display:flex;
</code></pre>
<p>span（内联元素)</p>
<pre><code>display:inline-flex;
</code></pre>
<h3 id="2作用区域">2，作用区域</h3>
<table>
<thead>
<tr>
<th>作用在flex容器(container)</th>
<th>作用在flex子项(item)</th>
</tr>
</thead>
<tbody>
<tr>
<td>flex-direction</td>
<td>order</td>
</tr>
<tr>
<td>flex-wrap</td>
<td>flex-grow</td>
</tr>
<tr>
<td>flex-flow</td>
<td>flex-shrink</td>
</tr>
<tr>
<td>justify-content</td>
<td>flex-basis</td>
</tr>
<tr>
<td>align-item</td>
<td>flex</td>
</tr>
<tr>
<td>align-content</td>
<td>align-self</td>
</tr>
</tbody>
</table>
<h2 id="二-详细">二、详细</h2>
<h3 id="作用在flex容器上的属性">作用在flex容器上的属性</h3>
<h4 id="1flex-direction">1，flex-direction</h4>
<p>row和row-reverse<br>
column和column-reverse<br>
<img src="https://cosmoslazycat.github.io/post-images/1625811948582.svg" alt="" loading="lazy"></p>
<p>2，flex-wrap<br>
<img src="https://cosmoslazycat.github.io/post-images/1625811974514.svg" alt="" loading="lazy"></p>
<pre><code>.container {
  flex-wrap: nowrap | wrap | wrap-reverse;
}
</code></pre>
<h4 id="3flex-flow">3，flex-flow</h4>
<pre><code>.container {
  flex-flow: column wrap;
}
</code></pre>
<h4 id="4justify-content">4，justify-content</h4>
<figure data-type="image" tabindex="1"><img src="https://cosmoslazycat.github.io/post-images/1625811996366.svg" alt="" loading="lazy"></figure>
<pre><code>.container {
  justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly | start | end | left | right ... + safe | unsafe;
}
</code></pre>
<h4 id="5-align-items">5, align-items</h4>
<figure data-type="image" tabindex="2"><img src="https://cosmoslazycat.github.io/post-images/1625812008548.svg" alt="" loading="lazy"></figure>
<pre><code>.container {
  align-items: stretch | flex-start | flex-end | center | baseline | first baseline | last baseline | start | end | self-start | self-end + ... safe | unsafe;
}
</code></pre>
<h4 id="6-align-content">6, align-content</h4>
<figure data-type="image" tabindex="3"><img src="https://cosmoslazycat.github.io/post-images/1625812021771.svg" alt="" loading="lazy"></figure>
<pre><code>.container {
  align-content: flex-start | flex-end | center | space-between | space-around | space-evenly | stretch | start | end | baseline | first baseline | last baseline + ... safe | unsafe;
}
</code></pre>
<h3 id="作用在flex子项item上的属性">作用在flex子项(item)上的属性</h3>
<h4 id="1-order">1. order</h4>
<figure data-type="image" tabindex="4"><img src="https://cosmoslazycat.github.io/post-images/1625812032539.svg" alt="" loading="lazy"></figure>
<pre><code class="language-css">.item {
  order: 5; /* 默认值为 0 */
}
</code></pre>
<h4 id="2-flex-grow">2. flex-grow</h4>
<figure data-type="image" tabindex="5"><img src="https://cosmoslazycat.github.io/post-images/1625812042359.svg" alt="" loading="lazy"></figure>
<pre><code class="language-css">.item {
  flex-grow: 4; /* default 0 */
}
</code></pre>
<h4 id="3-flex-shrink">3. flex-shrink</h4>
<pre><code class="language-css">.item {
  flex-shrink: 3; /* default 1 */
}
</code></pre>
<h4 id="4-flex-basis">4. flex-basis</h4>
<pre><code class="language-css">.item {
  flex-basis:  | auto; /* 默认值为 auto */
}
</code></pre>
<h4 id="5-flex">5. flex</h4>
<pre><code class="language-css">.item {
  flex: none | [ &lt;'flex-grow'&gt; &lt;'flex-shrink'&gt;? || &lt;'flex-basis'&gt; ]
}
</code></pre>
<h4 id="6-align-self">6. align-self</h4>
<figure data-type="image" tabindex="6"><img src="https://cosmoslazycat.github.io/post-images/1625812062868.svg" alt="" loading="lazy"></figure>
<pre><code>.item {
  align-self: auto | flex-start | flex-end | center | baseline | stretch;
}
</code></pre>
<h3 id="三-实际运用">三、实际运用</h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[blog]性能优化之预加载]]></title>
        <id>https://cosmoslazycat.github.io/post/bloggxing-neng-you-hua-zhi-yu-jia-zai/</id>
        <link href="https://cosmoslazycat.github.io/post/bloggxing-neng-you-hua-zhi-yu-jia-zai/">
        </link>
        <updated>2021-06-07T07:52:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="一-资料来源">一、资料来源</h3>
<p><a href="https://alienzhou.github.io/fe-performance-journey/7-preload/#_1-%E9%A2%84%E5%8A%A0%E8%BD%BD%E6%8A%80%E6%9C%AF">前端性能优化</a></p>
<p><a href="https://segmentfault.com/a/1190000021154893">懒加载在前端性能优化的应用及原理</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/146977355">前端性能优化之预加载和懒加载</a></p>
<p><a href="https://www.w3.org/TR/resource-hints/">ResourceHints</a> - 预加载的相关标准</p>
<h3 id="二-实现原理">二、实现原理</h3>
<p>预加载的意思是快用户一步，在空闲的时候就把用户将要用到的资源加载完，等用户实际需要使用时，资源已经存在在本地，自然就跳过了整个加载的等待时间。</p>
<p>预加载可以细分为以下几个点：<code>DNS-prefetch</code>、<code>subresource</code> 、 <code>prefetch</code>、<code>preconnect</code>、<code>prerender</code>。</p>
<h5 id="1dns-预解析-dns-prefetch">1，DNS 预解析 DNS-Prefetch</h5>
<p>通过 DNS 预解析来告诉浏览器未来我们可能从某个特定的 URL 获取资源，当浏览器真正使用到该域中的某个资源时就可以尽快地完成 DNS 解析。</p>
<pre><code>// 可能从 http://example.com 获取资源（图片、音频等）
// 此请求无需等待DNS解析
&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//example.com&quot;&gt;
</code></pre>
<h5 id="2预连接-preconnect">2，预连接 Preconnect</h5>
<p>与 DNS 预解析类似，preconnect 不仅完成 DNS 预解析，同时还将进行 TCP 握手和建立传输层协议</p>
<pre><code>&lt;link rel=&quot;preconnect&quot; href=&quot;http://example.com&quot;&gt;
</code></pre>
<h5 id="3-预获取-prefetching">3, 预获取 Prefetching</h5>
<p>如果我们确定某个资源将来一定会被使用到，我们可以让浏览器预先请求该资源并放入浏览器缓存中，也就是说如果我们猜测用户接下来将要访问哪个具体的资源，那就可以用prefetching来预加载确定的资源了</p>
<pre><code>&lt;link rel=&quot;prefetch&quot; href=&quot;image.png&quot;&gt;
</code></pre>
<h5 id="4subresources">4，Subresources</h5>
<p>这种方式指定的预获取资源具有最高的优先级，在所有 prefetch 项之前进行</p>
<pre><code>&lt;link rel=&quot;subresource&quot; href=&quot;styles.css&quot;&gt;
</code></pre>
<h5 id="5预渲染-prerender">5，预渲染 Prerender</h5>
<p>prerender 可以预先加载文档的所有资源，类似于在隐藏的tab 页中打开了某个链接 – 将下载所有资源、创建 DOM 结构、完成页面布局、应用 CSS 样式和执行 JavaScript 脚本等。</p>
<p>当用户真正访问该链接时，隐藏的页面就切换为可见，使页面看起来就是瞬间加载完成一样。</p>
<pre><code>&lt;link rel=&quot;prerender&quot; href=&quot;http://example.com&quot;&gt;
</code></pre>
<h5 id="6预加载之image对象">6，预加载之Image对象</h5>
<pre><code class="language-js">&lt;script src=&quot;./imagePreload.js&quot;&gt;&lt;/script&gt;

// imagePreload.js文件
var image= new Image()
image.src=&quot;https://xxx.xx.com/image.jpg&quot;
</code></pre>
<h5 id="高可信场景汇总">高可信场景汇总：</h5>
<ul>
<li>如果用户完成一个带有明显结果的搜索，那么结果页面很可能会被加载。</li>
<li>如果用户进入到登陆页面，那么登陆成功的页面很可能会被加载。</li>
<li>如果用户阅读一个多页的文章或访问一个分页的结果集，那么下一页很可能会被加载。</li>
</ul>
<h3 id="三-总结">三、总结：</h3>
<p>我主要是使用在首屏加载时需要的资源，以及一个资源过大的文件上，避免页面长时间空白，减少等待时间，优化体验。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[[翻译]一位软件工程师的心里话]]></title>
        <id>https://cosmoslazycat.github.io/post/translationyi-wei-ruan-jian-gong-cheng-shi-de-xin-li-hua/</id>
        <link href="https://cosmoslazycat.github.io/post/translationyi-wei-ruan-jian-gong-cheng-shi-de-xin-li-hua/">
        </link>
        <updated>2021-06-05T03:45:03.000Z</updated>
        <content type="html"><![CDATA[<p>原文：<a href="https://old.reddit.com/r/ExperiencedDevs/comments/nmodyl/drunk_post_things_ive_learned_as_a_sr_engineer/">Drunk Post: Things I've learned as a Sr Engineer</a></p>
<h3 id="我喝醉了我可能会后悔但这是我在过去10年里作为工程师学到的心得的排名">我喝醉了，我可能会后悔，但这是我在过去10年里作为工程师学到的心得的排名。</h3>
<ul>
<li>技术栈其实并不重要，因为在我的领域里，有15种基本的软件工程模式是适用的。我在数据领域工作，所以它不会与webdev或嵌入式相同。但所有的领域都有大约10-20个核心原则，技术栈只是试图使这些事情变得更容易，所以不要为它而烦恼。</li>
<li>人们建议找工作是有原因的。如果我对一份工作不满意，可能是时候继续前进了。</li>
<li>在我工作过的公司里，我结识了一些好的、终生的朋友。我不需要把这作为我工作的每个地方的要求。在那些我没有和同事建立友谊的地方工作，我非常开心；在那些我交了一些好朋友的地方，我也不开心。</li>
<li>我已经学会了对我的经理坦诚相待。不要太诚实，但要恰到好处，这样我才能以真心对待工作。最糟糕的情况是什么？他解雇我？我能在两周内找到一份新工作。</li>
<li>如果我每季度因待命而在凌晨2点被叫醒超过一次，那么事情就严重了，我要么解决它，要么辞职。</li>
</ul>
<h3 id="再来一杯酒">再来一杯酒</h3>
<ul>
<li>一个好经理的素质与一个好工程师的素质有很多相同之处。</li>
<li>当我刚开始工作时，我对技术、编程和计算机科学很着迷。我已经看开了。</li>
<li>好的代码是可以被一个初级工程师理解的代码。优秀的代码可以被计算机科学一年级的新生理解。最好的代码是根本没有代码。</li>
<li>作为一个工程师，最被低估的技能是如何记录。妈的，谁来教教我如何写好文档。说真的，如果有任何推荐，我会认真地支付一门课程（比如可能是很多钱，也许1千块钱的课程，如果它保证我可以写出好的文档。）</li>
<li>与此相关，写好修改建议是一项伟大的技能。</li>
<li>几乎所有的圣战（vim vs emacs, mac vs linux, 等等）都不重要...除了一个。见下文。</li>
<li>年龄越大，我就越欣赏动态语言。操，我说了。来互相伤害啊。</li>
<li>如果我发现自己认为自己是房间里最聪明的人，那就是时候离开了。</li>
<li>我不知道为什么全栈网络工程师的工资这么低。不，真的，他们应该得到50万的年薪，且这只是基本工资。他妈的，他们必须了解前端和后端，以及不同的浏览器如何工作，网络，数据库和缓存，以及网络和移动之间的差异，这还没完，OMG，公司他妈的有另一个框架想要使用？说真的，为什么网络工程师的工资这么低。</li>
<li>我们应该雇用更多的实习生，他们很了不起。这些精力充沛的小家伙们有自己的想法。如果他们能质疑或批评一些东西，那就更好了。我爱实习生。</li>
</ul>
<h3 id="抿一口">抿一口</h3>
<ul>
<li>不要见你的偶像。我花了5千美元参加了我的一个偶像的课程。他是一个杰出的人，但在课程结束时，我意识到他和我们其他人一样是临场瞎编。</li>
<li>技术栈很重要。好吧，我刚才说技术栈不重要，但请听我说。如果你听到Python开发和C++开发，你会想到非常不同的事情，对吗？这是因为特定工具在特定工作上真的很出色。如果你不确定你想做什么，就做Java吧。它是一种几乎能做任何事的垃圾的编程语言。</li>
<li>有史以来最伟大的编程语言是lisp。我应该学习lisp。</li>
<li>对于初学者来说，最有利可图的编程语言是SQL。所有其他语言给我去死。如果你只懂SQL而不懂其他，你就能赚到钱。薪资专家？也许5万刀。知道SQL的工资专家？9万刀. 在大公司有组织能力的普通人？4万刀. 有组织能力且会SQL的普通人？把自己当成产品经理，毫不费劲拿到15万薪资。</li>
<li>测试很重要，但TDD（测试驱动开发 Test-Driven Development）是一个该死的邪教。</li>
<li>舒适的政府工作不像他人所描述的那样，至少对于早期到中期的工程师来说是这样。当然，12万+福利+养老金听起来很香，但你将会出卖你的灵魂来从事深奥的专利技术工作。我非常尊重政府工作人员，但说真的，这些地方的工程师的中位年龄是50岁以上是有原因的。这条建议并不适用于政府承包商。</li>
<li>第三方招聘人员是吸血鬼。然而，如果你找到一个好的，认真地与他们建立良好的关系，他们可以帮助引导你的职业生涯。你怎么知道你是否有一个好的？如果他们已经在第三方招聘机构工作了3年以上，他们多半不咋地。好的招聘人员通常出自大公司。</li>
<li>期权要么没有价值的，要么可以使你成为百万富翁。他们可能一文不值，除非工程部的人数超过了100人，那至少在这十年内，它们也许是有价值的。</li>
<li>在家工作是最棒的。但不能白板协作真的很糟糕。</li>
<li>我没有在FAANG工作过，所以我不知道我错过了什么。但我曾经雇用过（或没有雇用过）FAANG的工程师，他们也不知道自己在做什么。</li>
<li>我的自我价值不是一个函数，也和我的总收入多少毫无关联。资本主义一个糟糕的体现自我价值的方法。</li>
<li>经理们的权力比你想象的要小得多得多。如果你曾经想过，为什么XYZ经理不解雇某人，那是因为他们做不到。</li>
<li>头衔大多并不重要。不管是什么公司的首席杰出员、首席工程师，还是什么。你做了什么，你取得了什么成就，才是人们关心的全部。</li>
<li>说到头衔：在你职业生涯的早期，头衔的变化是不错的；初级到中级，中级到高级，高级到领导。在你职业生涯的后期，头衔向下变化也很好；这样，你可以得到相同的报酬，但当你升职时，又会得到增加。换句话说，在你职业生涯的早期（&lt;10年），职称上升是好事，因为它让你的技能和责任得到增长。后来，职称下降是好事，因为它可以让你的工资增长。</li>
<li>把我们的400万养老金都用完。</li>
<li>善待每个人。不是因为这对你的事业有帮助（当然也会的），而是因为善良本身就很有意义。</li>
<li>如果我在过去的一个月里没有从初级工程师或实习生那里学到什么，那就是我没有注意。</li>
</ul>
<h3 id="哎呀我酒杯见底了">哎呀，我酒杯见底了。</h3>
<ul>
<li>为课程、书籍、会议付费是值得的。我参加过一些会议，一些1万5刀的课程，很多书，还有一个订阅服务。都是值得的。这样，我可以更好地假装我在做什么。</li>
<li>说真的，为什么webdevs的工资不高呢？他们样样精通！！。</li>
<li>腕关节综合征和腰肌劳损可不是玩笑。现在就把这1千刀在好的设备上。</li>
<li>我所有老板中最聪明的人是一个数学博士。我从那个人身上学到了很多东西。我希望他一切安好。</li>
<li>有一次，在高中时，有一个女孩是我的一个好朋友。在那几年里，我们聊天，相处，分享了很多私人的东西。然后有流言蜚语说我喜欢她，或者说我们在约会还是怎么的。她对此颇为不爽，所以就开始忽视我。这感觉真不好受，我想这就是当下流行用语所指的 &quot;Ghosting&quot;。不过我并不会对她有任何埋怨，我希望她过得还好。我很自责没有更好地处理这件事情。</li>
<li>我在八年级时有一个女朋友，尽管我不再喜欢她了，我也不想和她分手，所以我就开始忽视她了。那真是太糟糕了。我很抱歉，莉娜。</li>
<li>你知道一个软件工程师工作中最好的部分是什么吗？你可以遇到和你想法一样的人并和他们交流。不一定有相同的兴趣，比如体育和电视节目之类的。但他们思考问题的方式和你一样。这非常酷。</li>
<li>技术领域没有足够的女性，多么糟糕的一个行业。这需要改变。我一直在努力对我们组织中的女性工程师给予更多的鼓励和帮助，但我不知道还能做什么。</li>
<li>黑人工程师也一样很少。这到底是怎么回事？</li>
<li>我从来没有真正开始讨厌一种语言或技术，直到我开始亲密地熟悉它。另外，如果我讨厌一项技术的同时我认为它是好的，我还是会向客户推荐它。詹金斯我操你妈，但我不认为我把它推荐给新客户会是对软件的渎职行为。</li>
<li>也就是说，git很糟糕，但我没办法只能使用它。另外，GUI的git工具可以去死了，赶紧给我命令行吧，总共只需要背下7个命令行，其他的都可以用谷歌搜索。</li>
<li>因为我是做数据工作的，所以我将给出一个数据方面的教训。去他妈的Pandas（一个Python数据库）。</li>
<li>我的工作比较容易，因为我的团队里有半技术性的分析师。半技术性是因为他们知道编程，但不知道软件工程。这是一个福音，因为如果有些东西对他们来无法理解，那就意味着它可能设计得很糟糕。我喜欢团队中的分析员；他们对我成长的帮助比最出色的工程师要大得多。</li>
<li>暗模式很好，直到你被迫使用亮模式（网页或不支持的应用程序）。这就是为什么我使用亮模式。</li>
<li>我对安全问题仅有的了解让我明白我对安全问题一窍不通。</li>
</ul>
<h3 id="糟糕我没酒了">糟糕，我没酒了。</h3>
<ul>
<li>成为一名优秀的工程师意味着了解最佳实践。作为一名高级工程师意味着知道什么时候应该打破最佳实践。</li>
<li>如果人们试图将责任归咎于一个错误或故障，那么就应该继续前进。</li>
<li>很多进步的公司，特别是初创公司，都在谈论要带着 &quot;真实的自我&quot;。那么，如果你的真实自我都是在看A片呢？是的，在你的工作和个人生活之间保持一个屏障是健康的。</li>
<li>我喜欢在欢乐时光里和同事们一起喝酒。我宁愿花时间和孩子、家人或朋友在一起。</li>
<li>伟大的领导力的最好表现是，我的领导为一个100%是我的错误背了黑锅。你最好相信我愿意为她赴汤蹈火。</li>
<li>同样，我有幸在其手下工作的最好的领导，他们既尽力主张我的意见，也向我解释其他与我的意见相冲突的意见。我正在努力成为他们那样的人。</li>
<li>去他妈的副业。如果你喜欢做这些，那随你! 即使我有时间做副业，我也太他妈忙于喝醉了在reddit上发帖了。</li>
<li>算法和数据的限制是很重要的——在一定程度上。我不认为药剂师面试会测试关于有机化学的琐事。我们这个行业的面试过程有问题。</li>
<li>该死的，那些搞开发的男男女女真他妈聪明。不过，至少这些人薪酬合理。</li>
<li>做我喜欢的事并不重要。更重要的是做我不讨厌的事情。</li>
<li>我越接近产品，越接近推动收入的工作，我就越觉得有价值，无论我的工作有多大的技术含量。即使是最与时俱进的公司也是如此。</li>
<li>即使当我一直在Windows系统中工作时，也觉得Linux很重要。为什么？因为我最终就在Linux系统中工作。那些我搞砸了安装Arch的周末是我的快乐时光。</li>
<li>我已经学会了对像“大数据”这样模棱两可的流行语保持时刻警惕。什么是 &quot;大 &quot;数据？我曾经在Spark和Kafka中处理过每10分钟1万行的数据流，在Python和MySQL中处理过每小时10亿行的数据。这些标签可以去他妈的了。</li>
<li>并非所有的好工作都在硅谷。但有很多都是。</li>
<li>最后，如果你真的想伤害我，就不要给踩我的帖子，我不关心这个。只要不理会这个帖子就可以了。没有什么比我写了一个长帖子，然后没有人回应更让我难过的了。所以如果你讨厌这个帖子，就无视它吧。</li>
</ul>
<h3 id="哦该死我找到啤酒了让我们接着聊">哦，该死，我找到啤酒了：让我们接着聊。</h3>
<h3 id="关于编程语言">关于编程语言。</h3>
<ul>
<li>我曾经讨厌一种编程语言（C#），直到我开始使用它。现在我还是讨厌它，但认为它很有用。</li>
<li>然后我开始讨厌一种编程语言（C#），摒弃它后又回过头来看它。哇，那门编程语言真的进步了。</li>
<li>函数式语言最伟大的地方在于，函数是一流的，所有其他的程序员都知道这一点。</li>
<li>无论一门语言有多伟大或多优越，如果人们不使用它，那就没任何卵用。</li>
<li>学习一门语言并不难。学习生态系统才是难题。</li>
</ul>
<h3 id="关于同事">关于同事</h3>
<ul>
<li>合作对编程很好，只是需要大量的时间，而公司通常不愿意花费这些时间。</li>
<li>与聪明的工程师一起工作，使我成了一个更好的编码者。与聪明的非技术性同事一起工作，使我成了一个更好的工程师。</li>
<li>不要在朝九晚五的工作时间之外花时间工作。除非你想这样做是因为你有一个令人振奋的项目，而且你正处于兴奋状态。那是很棒的事情。</li>
<li>各个团队的欢乐时光和社交时间，99%都是放松和认识同事的时间，这很好。偶尔，这1%的时间是关于一个关键的项目和关键的代码，你很高兴你在社交场合提起工作，因为不这样就会有麻烦了。我并不是说基于此观点，我应该在工作之外和其他团队一起玩。我只是想联络感情。但这确实是一个很好的福利。</li>
<li>关于在家工作</li>
<li>如果公司一半是远程人员，一半是现场人员，那么确定远程人员是否被当作二等公民是很重要的。如果重大决定是在 &quot;饮水机 &quot;上做出的，那么最好尝试改变公司文化（很难），或者转到另一家把远程员工当作一等公民的公司。</li>
<li>在家工作的第二个最坏的主要缺点是没有白板。</li>
<li>在家工作的第一大弊端是很难向同事学习。除非我(a)有信心和自信地提出问题，以及(b)公司有一种文化，使远程员工与现场员工平等，否则我认为在我职业生涯的前5年里，最好在现场工作。</li>
</ul>
<h3 id="关于技术">关于技术</h3>
<ul>
<li>每个人都知道，技术在变化。在过去的10年里，科技领域发生了巨大的变化。但基本面并没有什么变化，尤其是适用于我的领域的基本面。</li>
<li>Hacker News和r/programming只适合于获得一般的想法和保持最新的情况。评论几乎毫无价值。</li>
<li>有很多对技术有强烈观点的业余爱好者，包括很多在 &quot;可敬的 &quot;期刊和博客上发表文章的业余人士。我发现要跟上谣言的步伐的同时要有自己想办法。</li>
<li>我在一家尖端的创业公司工作，我们不使用ABC尖端科技公司的最新XYZ技术。结果我发现，他们通常展示的只是他们工程部门的一小部分，且他们中的大多数人都在使用与我们同样的技术。</li>
<li>话虽如此，但看清这些迹象是很重要的。如果你想用现代技术工作，而你的公司仍然在用jQuery做大部分的开发，可能是时候重新评估你的职业生涯了。</li>
</ul>
<h3 id="关于数据工程">关于数据工程</h3>
<ul>
<li>他妈的，我是一个数据工程师，我索性就给你们写些更具体的、有针对性的建议/经验吧</li>
<li>SQL是王道。像MySQL、Postgres、Oracle、SQL Server这样的数据库，SQLite仍然是最牛的。即使你与新技术打交道，大部分技术最终还是会转移。</li>
<li>大多数公司都不做流媒体。这很难，也很复杂。如果你已经工作了10年，还不知道如何处理每秒1万条记录，那也不用担心，外面还有的是工作等着你。</li>
<li>Airflow是狗屎，没错。外面还有其他产品，但可恨的是Airflow是最广泛使用的那个。</li>
<li>机器学习项目是非常容易失败的。它们很复杂，很难实现。不相信我？编写他妈的单元测试一个机器学习模型有多容易？懂了吧。</li>
<li>我们的领域是新的。没有关于数据工程的好书，只能放手去 &quot;做&quot;。不能通过训练营和别的垃圾方法来学习它。这可能会在10年后发生变化，因为我们都逐渐理清了我们到底他妈的在做什么。</li>
<li></li>
</ul>
<h3 id="关于生活">关于生活</h3>
<ul>
<li>人会死。你希望你的代码成为你的遗产吗？如果是的话，那就花很多时间在上面，然后去死，因为那是你他妈的遗产! 但是，如果你像我一样，你的遗产被家人、朋友和你生活中的人所包围，而不是你写的代码。那就不要太在意代码了。</li>
<li>好的员工会写出低劣的代码。聪明的员工也会写出烂代码。优秀的程序员和优秀的工程师也会写低劣的代码。不要让代码质量成为你自我价值的一个考量标准。</li>
<li>我进入技术和编码领域是因为技术是我的爱好。现在我的爱好和工作是一样的，它毁了我的爱好。所以现在如果我想享受技术，我需要放弃我的爱好。或者我需要接受科技不再是我的爱好的事实，并找到新的爱好。</li>
<li>编程和计算机科学大概有80年历史了吧？与任何其他工程学科相比。是的，我们总体上不知道我们在做什么。</li>
<li>我赚的钱绝对不少。要心存感激，懂得感恩。还有，要节约。</li>
</ul>
<h3 id="其他琐碎">其他琐碎</h3>
<ul>
<li>多年来，我建立了很多大型平台和数据库，被多个团队和人员使用。然而由于某些原因，我最自豪的是被我自己使用的我写的小脚本。</li>
<li>我职业生涯中最自豪的成就是帮助其他人更好地完成他们的工作。这可能是因为我注定要成为一个人事经理，所以这可能对你们没有啥帮助。</li>
<li>有一次当我在找工作的时候，我创建并更新了我的Linkedin。我得到了狗屎般的回复，然后就把账号注销了。而现在我用Linkedin来寻找其他候选人加入我的公司。一句话，Linkedin充斥着很多噪音。因为现在我的部分工作就是为这些噪音做贡献，我才觉得它很有用处。</li>
<li>有一次，我在大学里发现一个女孩喜欢我。因为我不怎么自信，我不太相信这是真的，但后来她主动约我。尽管她真的很酷，但我还是告诉她我不感兴趣。那是我一生中最自豪的时刻之一，因为我在19岁时就足够成熟，可以用成熟的方式拒绝对方。</li>
<li>r/cscareerquestions是这样一个充满自我和错误信息的污水池，我不知道该面对它。就像，我操，我想吸引所有这些人的注意力，并试图向他们解释世界的真实情况，但他们不会相信我。</li>
<li>关于我现在的总体感觉</li>
<li>我喝醉了，而我通常不喝酒，所以我会认为我说的每一句话都可能是蹩脚的或糟糕的。</li>
<li>我强烈认为，人们应该储蓄和投资金钱。如果你有6位数的工资，请尽力把你的401k做到最大。</li>
<li>我已经成为我一直讨厌的人了：在职业生涯中从事技术工作，但在现实生活中避开技术。也许那是随着年龄的增长而来的。</li>
<li>r/ExperiencedDevs是一个相当酷的社区。谢谢你们，管理员。你们得到的赞赏比你们应得的少。说真的，谢谢你们。</li>
<li>我的事业、我的薪水、我的生活可能都归功于Reddit。Reddit被喷得屎去活来，但这里的社区让我摆脱了贫困（在加油站工作，赚取最低工资），学习Linux、SQL、Python、C#、Python和其他，让我有了今天的成就。</li>
<li>有孩子很好啊，我没有选择生孩子。为什么？因为我喜欢孩子，而且我很害怕自己会成为一个什么样的父亲。哦，该死，在这里发这个是不是太私人了？</li>
<li>有一次，有人问我崇拜谁，我说Conan O'brien（TBS电视网柯南秀主持人），他们就笑我了。但我是认真的，因为在他最后一次在《今夜秀》的节目中，他告诉他的观众要善良，要努力工作。这发生在我生命中的一个困难时期，当我看着他说这句话时，我说，你知道吗，我也要这样做。因为我有什么可失去的呢？而且你知道吗？我遇到了一些杰出的人，因为我对他们不赖，我10多年以来从他们身上学到了很多东西。通过努力工作和不害怕尝试新事物，我成长了很多。因为这些话，我的生活无限地、无限地变得更美好。因此，是的，说我因为在生活中取得了一定程度的成就归功于一档深夜秀节目，可能看起来很傻，甚至可笑。但你知道吗，滚你妈的，这是我的人生，我会自豪地说，我所取得的任何成功都是因为深夜电视上的一个该死的喜剧大师。</li>
</ul>
<h3 id="我酒醉不已所以请无视我所说的一切-另外对我的抱怨表示歉意">我酒醉不已，所以请无视我所说的一切。另外，对我的抱怨表示歉意。</h3>
]]></content>
    </entry>
</feed>